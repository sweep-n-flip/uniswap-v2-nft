type Collection @entity {
  id: ID!
  name: String
  symbol: String
  wrapper: Currency!
}

type Currency @entity {
  id: ID!
  name: String
  symbol: String
  decimals: Int!
  wrapping: Boolean!
  collection: Collection
  tokenIds: [BigInt!]
}

type Pair @entity {
  id: ID!
  discrete0: Boolean!
  discrete1: Boolean!
  token0: Currency!
  token1: Currency!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
}

type PairDay @entity {
  id: ID!
  pair: Pair!
  day: Int!
  volume0: BigDecimal!
  volume1: BigDecimal!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
}

type PairMonth @entity {
  id: ID!
  pair: Pair!
  month: Int!
  volume0: BigDecimal!
  volume1: BigDecimal!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!
}

type Swap @entity {
  id: ID!
  txId: Bytes!
  origin: Bytes!
  pair: Pair!
  type: String!
  volume0: BigDecimal!
  volume1: BigDecimal!
  timestamp: Int!
}

type Counter @entity {
  id: ID!
  value: BigInt!
}
